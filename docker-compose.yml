version: "3.9"
services:
  backend:
    build: ./backend
    command:
      - uvicorn
      - --port=80
      - --host=0.0.0.0
      - routers.main:app
    environment:
      DB_ADDRESS: backend-db
      DB_NAME: cvedb
      DB_PASS: password
      DB_PORT: 5432
      DB_USER: user
      GH_ACCESS_TOKEN: ${GH_ACCESS_TOKEN}
      REDIS_HOST: backend-redis
      REDIS_PORT: 6379
      EXPECTED_PREFIX: /api

  backend-db:
    environment:
      POSTGRES_DB: cvedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    image: docker.io/postgres:15.0
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend-redis:
    image: docker.io/redis:7.0.5
    ports:
      - 6379:6379

  worker-list-packages:
    build: ./backend
    command:
      - bash
      - worker.sh
    deploy:
      replicas: 1
    environment:
      DB_ADDRESS: backend-db
      DB_NAME: cvedb
      DB_PASS: password
      DB_PORT: 5432
      DB_USER: user
      GH_ACCESS_TOKEN: ${GH_ACCESS_TOKEN}
      REDIS_HOST: backend-redis
      REDIS_PORT: 6379
      QUEUE_NAME: to_list_packages

  worker-list-versions:
    build: ./backend
    command:
      - bash
      - worker.sh
    deploy:
      replicas: 1
    environment:
      DB_ADDRESS: backend-db
      DB_NAME: cvedb
      DB_PASS: password
      DB_PORT: 5432
      DB_USER: user
      GH_ACCESS_TOKEN: ${GH_ACCESS_TOKEN}
      REDIS_HOST: backend-redis
      REDIS_PORT: 6379
      QUEUE_NAME: to_list_versions

  worker-generate-tree:
    build: ./backend
    command:
      - bash
      - worker.sh
    deploy:
      replicas: 5
    environment:
      DB_ADDRESS: backend-db
      DB_NAME: cvedb
      DB_PASS: password
      DB_PORT: 5432
      DB_USER: user
      GH_ACCESS_TOKEN: ${GH_ACCESS_TOKEN}
      REDIS_HOST: backend-redis
      REDIS_PORT: 6379
      QUEUE_NAME: to_generate_tree

  docs:
    build: ./docs
    deploy:
      replicas: 1

  nginx:
    depends_on:
        - docs
        - backend
    image: nginx:alpine
    restart: always
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
      - "./downloads:/var/downloads"
    ports:
      - ${API_PORT:-8001}:80

volumes:
  postgres_data:
